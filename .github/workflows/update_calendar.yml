name: Update Google Calendar

on:
  schedule:
    - cron: "1 18 * * *" # Prochaine exécution à 18:01 (heure locale)
  workflow_dispatch:  # Déclenchement manuel

jobs:
  update-calendar:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Timeout de sécurité
    permissions:
      contents: write  # Donner la permission d'écrire dans le repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Mise à jour vers v4
        with:
          token: ${{ secrets.WORKFLOW_PAT }}  # Utilisation du token pour checkout
          fetch-depth: 0  # Important pour avoir tout l'historique Git

      - name: Set up Python
        uses: actions/setup-python@v5  # Mise à jour vers v5
        with:
          python-version: "3.11"  # Version Python explicite plutôt qu'un secret

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver
          chromium-browser --version
          chromedriver --version

      - name: Set up display
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create configuration files
        run: |
          mkdir -p google
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > google/client_secret.json
          echo '${{ secrets.GOOGLE_TOKEN }}' | base64 -d > google/token.pickle

      - name: Run script with debug
        env:
          CY_USERNAME: ${{ secrets.CY_USERNAME }}
          CY_PASSWORD: ${{ secrets.CY_PASSWORD }}
          DISPLAY: :99
          PYTHONUNBUFFERED: 1
          SELENIUM_HEADLESS: 1
          CHROME_OPTS: "--no-sandbox --disable-dev-shm-usage --disable-gpu"
        run: |
          set -e
          set -o pipefail
          python3 -u cyCalendar.py 2>&1
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Script terminated with error code $exit_code"
            exit $exit_code
          fi

      - name: Upload logs if failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: |
            *.log
            ./*.txt
          retention-days: 5

      - name: Update next execution time
        if: success()
        run: |
          echo "Mise à jour du planning d'exécution..."
          python3 -u src/update_schedule.py

      - name: Commit and push updated workflow
        if: success()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .github/workflows/update_calendar.yml
          git commit -m "Update execution schedule to a random time" || echo "No changes to commit"
          # Utilisation du token pour le push
          git push https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:${GITHUB_REF}
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
